# fetchers:
#   - name: "Fetch Company Doc"
#     class: fetchers.doc_fetcher.DocsFetcher
#     enabled: true
#     params:
#       document_id: "1vCiKVeZJ-eu5k7mXCWLEHoKklCEnjklmcWSMGI2P-vc"

#   # - class: fetchers.api_fetcher.ApiFetcher
#   #   params:
#   #     endpoint: "https://jsonplaceholder.typicode.com/posts"

# writers:
#   - name: "Fetch Company Doc"
#     class: writers.sheet_writer.SheetsWriter
#     enabled: true
#     params:
#       sheet_id: "1QQ5vdkowV-QHu4-awkiM-Mq06lQahY0NaunrDXFwQnw"
#       mode: "append"  # custom param used by your writer

#   # - class: writers.api_writer.ApiWriter
#   #   params:
#   #     endpoint: "https://example.com/api/store"


pipeline:
  - name: "Fetch or Write to Google Sheet"
    enabled: false
    fetcher:
      class: fetchers.sheets_fetcher.SheetsFetcher
      operation: fetch_data
      params:
        spreadsheet_id: "1B_DrTxQFaWSRxWeTc7k0Bq6_GP2a2uwcLGZH6BoHaOc"
        range_name: "Sheet1!A1:D10"
        service_name: "sheets_cred"  # must match key in auth_config.yaml

    writers:
      - class: writers.sheet_writer.SheetsWriter
        operation: write_data
        params:
          sheet_id: "1Q7UC0jNO2rJBfpVTP2h1QyA7YPi1f5zURVkRj4xTeGM"
          mode: "append"
          service_name: "sheets_cred"


  - name: "Fetch or write to google doc"
    enabled: false
    fetcher:
      class: fetchers.doc_fetcher.DocsFetcher
      operation: get_document_title
      params:
        doc_id: "1vCiKVeZJ-eu5k7mXCWLEHoKklCEnjklmcWSMGI2P-vc"
        service_name: "docs_cred"
      # operation_params:
      #   heading: "What is Lorem Ipsum?"
    writers:
      - class: writers.doc_writer.DocsWriter
        operation: set_document_title
        params:
          doc_id: "1QNvMpVy9-VMzlXsjdaOulXy-kSfcHlq941Z9q4y2SfM"
          service_name: "docs_cred"
        # operation_params:
        #   text: "My name is Aindrila"
        #   level: 1

  - name: "Fetch or write to google calendar"
    enabled: false
    fetcher:
      class: fetchers.calendar_fetcher.GoogleCalendarFetcher
      operation: get_upcoming_event
      params:
        service_name: "calendar_cred"
      # operation_params:
      #   summary: "Sample Event11111"
      #   description: "This is a sample event description."
      #   start:
      #     dateTime: "2025-06-18T10:00:00Z"
      #     timeZone: "UTC"
      #   end:
      #     dateTime: "2025-06-18T11:00:00Z"
      #     timeZone: "UTC"
      #   attendees:
      #     - email: "aindrilapatra2019@gmail.com"
      #   reminders:
      #     useDefault: true
    writers:
      - class: writers.calendar_writer.GoogleCalendarWriter
        operation: update_event
        params:
          service_name: "calendar_cred"
        operation_params:
          event_id: "ug1bd32r7d1e08jpeiff66vq00"  # <-- ID of the event you want to update
          event:
            - summary: "Updated Meeting Title"
              description: "This is an updated event description."

  - name: "Fetch or write to google drive"
    enabled: false
    fetcher:
      class: fetchers.drive_fetcher.DriveFetcher
      operation: fetch_file_id_by_name
      params:
        service_name: "drive_cred"
      operation_params:
        filename: "cat"
        parent_folder_id: "1gzM8pb6zejCMSQRYOYMGezRpGZylhAG4"
        exact_match: false
    writers:
      - class: writers.drive_writer.DriveWriter
        operation: share_file_with_email
        params:
          service_name: "drive_cred"
        operation_params:
          email: "aindrilapatra2019@gmail.com"
          role: "writer"

  # - name: "Fetch or write to google form"
  #   enabled: true
  #   fetcher:
  #     class: fetchers.form_fetcher.FormFetcher
  #     operation: fetch_questions_only
  #     params:
  #       form_id: ""
  #       service_name: "form_cred"
  #     operation_params:
  #         info:
  #           title: "Customer Feedback Survey"
  #           documentTitle: "Feedback_Form_June"
  #           description: "Please fill out this form to help us improve our services."
  #   writers:
  #     - class: writers.form_writer.FormWriter
  #       operation: write_data
  #       params:
  #         form_id: ""
  #         service_name: "form_cred"
        # operation_params:
        #   info:
        #     title: "Customer Feedback Survey"
        #     description: "This is my form"

  # - name: "Create questions in a Google Form"
  #   enabled: true

  #   fetcher:
  #     class: fetchers.form_fetcher.FormFetcher
  #     operation: fetch_questions_only
  #     params:
  #       form_id: ""  # No existing form used for fetcher
  #       service_name: "form_cred"
  #     operation_params:
  #       structure:
  #         - title: "How satisfied are you with our service?"
  #           questionItem:
  #             question:
  #               required: true
  #               choiceQuestion:
  #                 type: "RADIO"
  #                 options:
  #                   - value: "Very Satisfied"
  #                   - value: "Satisfied"
  #                   - value: "Neutral"
  #                   - value: "Dissatisfied"
  #                   - value: "Very Dissatisfied"
  #                 shuffle: false

  #         - title: "What can we improve?"
  #           questionItem:
  #             question:
  #               required: false
  #               textQuestion: {}

  #   writers:
  #     - class: writers.form_writer.FormWriter
  #       operation: create_questions
  #       params:
  #         form_id: "1I6KDNWrLG7uBDu2cMQV5hx5GLjhoZYwwIp2DOxgLqwg"
  #         service_name: "form_cred"

  - name: "Create questions in a Google Form"
    enabled: false

    fetcher:
      class: fetchers.form_fetcher.FormFetcher
      operation: fetch_data
      params:
        form_id: "1I6KDNWrLG7uBDu2cMQV5hx5GLjhoZYwwIp2DOxgLqwg"  # No existing form used for fetcher
        service_name: "form_cred"

    writers:
      - class: writers.form_writer.FormWriter
        operation: set_publish_settings
        params:
          form_id: "1I6KDNWrLG7uBDu2cMQV5hx5GLjhoZYwwIp2DOxgLqwg"
          service_name: "form_cred"
        operation_params:
          settings:
            publishSettings:
              anyone_can_respond: true
              can_edit: false
              can_view_responses: true


  - name: "Read and write to google slide"
    enabled: false

    fetcher:
      class: fetchers.slide_fetcher.GoogleSlidesFetcher
      operation: get_presentation_data
      params:
        presentation_id: "1GMZUb7fRcqq8HMGmg8DTAj5ute3iEmgTBZCXv_sdKyY"
        service_name: "slides_cred"
      operation_params:
        title: "Marketing Strategy 2025"

    writers:
      - class: writers.slide_writer.GoogleSlidesWriter
        operation: write_data
        params:
          presentation_id: ""
          service_name: "slides_cred"
        

  - name: "Read and write to google slide"
    enabled: false

    fetcher:
      class: fetchers.slide_fetcher.GoogleSlidesFetcher
      operation: fetch_data
      params:
        presentation_id: "1GMZUb7fRcqq8HMGmg8DTAj5ute3iEmgTBZCXv_sdKyY"
        service_name: "slides_cred"

    writers:
      - class: writers.slide_writer.GoogleSlidesWriter
        operation: insert_textbox
        params:
          presentation_id: "1GMZUb7fRcqq8HMGmg8DTAj5ute3iEmgTBZCXv_sdKyY"
          service_name: "slides_cred"
        operation_params:
          text: "Welcome to the Presentation!"
          x: 100
          y: 150

  - name: "Read and write to google slide"
    enabled: false

    fetcher:
      class: fetchers.slide_fetcher.GoogleSlidesFetcher
      operation: fetch_presentation_metadata
      params:
        presentation_id: "1GMZUb7fRcqq8HMGmg8DTAj5ute3iEmgTBZCXv_sdKyY"
        service_name: "slides_cred"

    writers:
      - class: writers.slide_writer.GoogleSlidesWriter
        operation: insert_textbox
        params:
          presentation_id: "1GMZUb7fRcqq8HMGmg8DTAj5ute3iEmgTBZCXv_sdKyY"
          service_name: "slides_cred"
        operation_params:
          text: "Welcome to the Presentation!"
          x: 100
          y: 150

  - name: "Send message to Google Chat"
    enabled: false

    fetcher:
      class: fetchers.chat_fetcher.GoogleChatFetcher
      operation: fetch_data
      params:
        space_id: "AAQA-NQcI7k"  # Replace with your actual Google Chat space ID
        service_name: "chat_cred"
      operation_params:
        text: "Hello Alay! This is a message from the pipeline."

    writers:
      - class: writers.chat_writer.GoogleChatWriter
        operation: write_data
        params:
          space_id: "AAQA-NQcI7k"  # Same space ID
          service_name: "chat_cred"


  - name: "Create course in Google Classroom"
    enabled: false

    fetcher:
      class: fetchers.classroom_fetcher.GoogleClassroomFetcher
      operation: get_sample_course
      params:
        service_name: "classroom_cred"
      operation_params:
        name: "Introduction to AI"
        section: "Period 1"
        descriptionHeading: "AI Basics"
        description: "This course introduces students to Artificial Intelligence."
        room: "Room 101"
        ownerId: "me"   # or actual teacher's email if using domain-wide delegation
        courseState: "PROVISIONED"

    writers:
      - class: writers.classroom_writer.GoogleClassroomWriter
        operation: write_data
        params:
          service_name: "classroom_cred"

  - name: "Create course in Google Classroom"
    enabled: false

    fetcher:
      class: fetchers.classroom_fetcher.GoogleClassroomFetcher
      operation: fetch_data
      params:
        service_name: "classroom_cred"

    writers:
      - class: writers.classroom_writer.GoogleClassroomWriter
        operation: create_course_work
        params:
          service_name: "classroom_cred"
        operation_params:
          course_id: "782533316121"  # Replace with actual course ID

  - name: "Create course in Google Classroom"
    enabled: false

    fetcher:
      class: fetchers.classroom_fetcher.GoogleClassroomFetcher
      operation: fetch_course_work
      params:
        service_name: "classroom_cred"
      operation_params:
          course_id: "782533316121" 

    writers:
      - class: writers.classroom_writer.GoogleClassroomWriter
        operation: delete_course
        params:
          service_name: "classroom_cred"

  - name: "Create Google Task List"
    enabled: false

    fetcher:
      class: fetchers.tasks_fetcher.GoogleTasksFetcher
      operation: get_sample_task_list
      params:
        service_name: "tasks_cred"
      operation_params:
        title: "Project Deadlines"

    writers:
      - class: writers.tasks_writer.GoogleTasksWriter
        operation: write_data
        params:
          service_name: "tasks_cred"

  - name: "Create Google Task List"
    enabled: false

    fetcher:
      class: fetchers.tasks_fetcher.GoogleTasksFetcher
      operation: get_sample_task_list
      params:
        service_name: "tasks_cred"
      operation_params:
        title: "Complete the integration"
        notes: "Remember to write unit tests"
        due: "2025-06-30T23:59:00.000Z"  # Must be RFC 3339 formatted

    writers:
      - class: writers.tasks_writer.GoogleTasksWriter
        operation: create_task
        params:
          service_name: "tasks_cred"
        operation_params:
          tasklist_id: "cDBqUUdXSWNIbEpYTHlIXw"

  - name: "Create Google Task List"
    enabled: false

    fetcher:
      class: fetchers.tasks_fetcher.GoogleTasksFetcher
      operation: fetch_data
      params:
        service_name: "tasks_cred"
      operation_params:
        tasklist_id: "cDBqUUdXSWNIbEpYTHlIXw"

    writers:
      - class: writers.tasks_writer.GoogleTasksWriter
        operation: update_task
        params:
          service_name: "tasks_cred"
        operation_params:
          tasklist_id: "cDBqUUdXSWNIbEpYTHlIXw"
          task_id: "U3owb1lRNUEwX1FoZXNLNw"
          updates:
            title: "Updated Task Title"
            notes: "Updated notes"
            due: "2025-07-01T17:00:00.000Z"
            status: "needsAction"

  - name: "Create Google Task List"
    enabled: false

    fetcher:
      class: fetchers.tasks_fetcher.GoogleTasksFetcher
      operation: fetch_data
      params:
        service_name: "tasks_cred"
      operation_params:
          tasklist_id: "cDBqUUdXSWNIbEpYTHlIXw"

    writers:
      - class: writers.tasks_writer.GoogleTasksWriter
        operation: delete_task
        params:
          service_name: "tasks_cred"
        operation_params:
          tasklist_id: "cDBqUUdXSWNIbEpYTHlIXw"
          task_id: "U3owb1lRNUEwX1FoZXNLNw"

  - name: "Create Google Keep Note"
    enabled: false

    fetcher:
      class: fetchers.keep_fetcher.GoogleKeepFetcher
      operation: get_sample_note
      params:
        service_name: "keep_cred"
      operation_params:
        title: "Grocery List"
        body:
          # text:
          #   text: "Discuss project timelines and deliverables."
          list:
            listItems:
              - text: "Milk"
                checked: false
              - text: "Eggs"
                checked: true

    writers:
      - class: writers.keep_writer.GoogleKeepWriter
        operation: write_data
        params:
          service_name: "keep_cred"

  - name: "Upload File to Dropbox"
    enabled: true

    fetcher:
      class: fetchers.dropbox_fetcher.DropboxFetcher
      operation: get_file_content
      params:
        service_name: "dropbox_cred"
      operation_params:
        file_path: "/home/aindrila/Pictures/cat1.jpg"

    writers:
      - class: writers.dropbox_writer.DropboxWriter
        operation: write_data
        params:
          service_name: "dropbox_cred"
        operation_params:
          dest_path: "/Photos/cat1.jpg"
          mode: "overwrite"





          


